/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture;
SamplerState SampleType;

cbuffer LightBuffer
{
	float4 diffuseColor;
	float3 lightDirection;
	float padding;
};

//-----
//typedefs
//-----
struct PixelInputType
{
	float4 position: SV_POSITION;
	float2 tex: TEXCOORD0;
};

float4 BasePixelShader(PixelInputType input): SV_TARGET
{
	float4 textureColor;
	float3 lightDir;
	float lightIntens;
	float4 color;

	// sample the pixel color from texture
	textureColor = shaderTexture.Sample(SampleType, input.tex);
	lightDir = -lightDirection;
	color = saturate(diffuseColor * lightIntens);

	color = color * textureColor;

	return color;
}